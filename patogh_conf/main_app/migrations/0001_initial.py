# Generated by Django 3.2.3 on 2022-06-16 12:17

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import main_app.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=100, unique=True, verbose_name='نام کاربری')),
                ('first_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='نام')),
                ('last_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='نام خانوادگی')),
                ('email', models.EmailField(max_length=50, unique=True, verbose_name='ایمیل')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='تاریخ تولد')),
                ('province', models.CharField(blank=True, choices=[('azr-e', 'آذربایجان شرقی'), ('azr-w', 'آذربایجان غربی'), ('ardabil', 'اردبیل'), ('esfahan', 'اصفهان'), ('alborz', 'البرز'), ('ilam', 'ایلام'), ('bushehr', 'بوشهر'), ('tehran', 'تهران'), ('charmahal', 'چهارمحال و بختیاری'), ('khor-s', 'خراسان جنوبی'), ('khor-n', 'خراسان شمالی'), ('khor-r', 'خراسان رضوی'), ('khuzestan', 'خوزستان'), ('zanjan', 'زنجان'), ('semnan', 'سمنان'), ('sistan', 'سیستان و بلوچستان'), ('fars', 'فارس'), ('qazvin', 'قزوین'), ('qom', 'قم'), ('kordestan', 'کردستان'), ('kerman', 'کرمان'), ('kermanshah', 'کرمانشاه'), ('kohgiloye', 'کهگیلویه و بویر احمد'), ('golestan', 'گلستان'), ('gilan', 'گیلان'), ('lorestan', 'لرستان'), ('mazandaran', 'مازندران'), ('markazi', 'مرکزی'), ('hormozgan', 'هرمزگان'), ('hamedan', 'همدان'), ('yazd', 'یزد')], max_length=20, null=True, verbose_name='استان')),
                ('gender', models.CharField(blank=True, choices=[('female', 'زن'), ('male', 'مرد')], max_length=6, null=True, verbose_name='جنسیت')),
                ('avatar', models.ImageField(blank=True, help_text='JPG, JPEG or PNG is validate', null=True, upload_to=main_app.models.user_image_profile_directory_path, validators=[django.core.validators.FileExtensionValidator(['png', 'jpg', 'jpeg']), main_app.models.validate_image_size], verbose_name='عکس پروفایل')),
                ('bio', models.CharField(blank=True, max_length=1000, null=True, verbose_name='بیو')),
                ('friends', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL, verbose_name='دوستان')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'کاربر',
                'verbose_name_plural': 'کاربران',
                'ordering': ['username'],
            },
        ),
        migrations.CreateModel(
            name='Hangout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='نام')),
                ('datetime', models.DateTimeField(verbose_name='زمان برگذاری')),
                ('description', models.CharField(max_length=100, verbose_name='توضیحات')),
                ('address', models.CharField(max_length=300, verbose_name='آدرس')),
                ('gender', models.CharField(choices=[('male', 'پسر'), ('female', 'دختر'), ('both', 'مختلط')], max_length=10, verbose_name='جنسیت')),
                ('province', models.CharField(choices=[('azr-e', 'آذربایجان شرقی'), ('azr-w', 'آذربایجان غربی'), ('ardabil', 'اردبیل'), ('esfahan', 'اصفهان'), ('alborz', 'البرز'), ('ilam', 'ایلام'), ('bushehr', 'بوشهر'), ('tehran', 'تهران'), ('charmahal', 'چهارمحال و بختیاری'), ('khor-s', 'خراسان جنوبی'), ('khor-n', 'خراسان شمالی'), ('khor-r', 'خراسان رضوی'), ('khuzestan', 'خوزستان'), ('zanjan', 'زنجان'), ('semnan', 'سمنان'), ('sistan', 'سیستان و بلوچستان'), ('fars', 'فارس'), ('qazvin', 'قزوین'), ('qom', 'قم'), ('kordestan', 'کردستان'), ('kerman', 'کرمان'), ('kermanshah', 'کرمانشاه'), ('kohgiloye', 'کهگیلویه و بویر احمد'), ('golestan', 'گلستان'), ('gilan', 'گیلان'), ('lorestan', 'لرستان'), ('mazandaran', 'مازندران'), ('markazi', 'مرکزی'), ('hormozgan', 'هرمزگان'), ('hamedan', 'همدان'), ('yazd', 'یزد')], max_length=20, verbose_name='استان')),
                ('status', models.CharField(choices=[('private', 'خصوصی'), ('public', 'عمومی')], max_length=20, verbose_name='وضعیت')),
                ('min_age', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(12), django.core.validators.MaxValueValidator(50)], verbose_name='حداقل سن')),
                ('max_age', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(16), django.core.validators.MaxValueValidator(70)], verbose_name='حداکثر سن')),
                ('price', models.PositiveIntegerField(blank=True, null=True, verbose_name='هزینه')),
                ('type', models.CharField(blank=True, choices=[('scientific', 'علمی'), ('athletic', 'ورزشی'), ('artistic', 'هنری')], max_length=30, null=True, verbose_name='نوع پاتوق')),
                ('place', models.CharField(blank=True, choices=[('park', 'پارک'), ('museum', 'موزه'), ('cafe', 'کافه'), ('restaurant', 'رستوران '), ('cinema', 'سینما')], max_length=40, null=True, verbose_name='مکان')),
                ('is_over', models.BooleanField(default=False, verbose_name='تمام شده')),
                ('duration', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='مدت برگزاری')),
                ('repeat', models.CharField(blank=True, choices=[('none', 'هیچکدام'), ('weekly', 'هر هفته'), ('monthly', 'هر ماه')], default='n', max_length=20, null=True, verbose_name='تکرار')),
                ('maximum_members', models.PositiveIntegerField(blank=True, null=True, verbose_name='حداکثر تعداد اعضا')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hangout_creator', to=settings.AUTH_USER_MODEL, verbose_name='سازنده')),
                ('members', models.ManyToManyField(to=settings.AUTH_USER_MODEL, verbose_name='اعضا')),
            ],
            options={
                'verbose_name': 'پاتوق',
                'verbose_name_plural': 'پاتوق ها',
            },
        ),
        migrations.CreateModel(
            name='PendingVerify',
            fields=[
                ('receptor', models.EmailField(default='a@a.com', max_length=50, primary_key=True, serialize=False, verbose_name='دریافت کننده')),
                ('otp', models.IntegerField(verbose_name='OTP کد')),
                ('send_time', models.DateTimeField(auto_now_add=True, verbose_name='زمان ارسال')),
                ('allowed_try', models.SmallIntegerField(default=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)], verbose_name=' دفعات مجاز برای تلاش')),
            ],
            options={
                'verbose_name': 'تاییدیه',
                'verbose_name_plural': 'تاییدیه ها',
                'ordering': ['send_time'],
            },
        ),
        migrations.CreateModel(
            name='Support',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, verbose_name='ایمیل')),
                ('description', models.TextField(max_length=2000, verbose_name='متن پیام')),
                ('date', models.DateTimeField(auto_now_add=True, null=True, verbose_name='تاریخ')),
            ],
            options={
                'verbose_name': 'پشتیبانی',
                'verbose_name_plural': 'پشتیبانی ها',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='HangoutInvitation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateField(auto_now_add=True, verbose_name='زمان ارسال')),
                ('hangout', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.hangout', verbose_name='پاتوق')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='کاربر')),
            ],
            options={
                'verbose_name': 'درخواست افزودن به پاتوق',
                'verbose_name_plural': 'درخواست های افزودن به پاتوق',
            },
        ),
        migrations.CreateModel(
            name='HangoutImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=main_app.models.hangout_image_profile_directory_path, validators=[django.core.validators.FileExtensionValidator(['png', 'jpg', 'jpeg']), main_app.models.validate_image_size], verbose_name='عکس')),
                ('hangout', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.hangout', verbose_name='پاتوق')),
            ],
        ),
        migrations.CreateModel(
            name='FriendRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(auto_now_add=True, verbose_name='زمان ارسال')),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='receiver', to=settings.AUTH_USER_MODEL, verbose_name='گیرنده')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sender', to=settings.AUTH_USER_MODEL, verbose_name='فرستنده')),
            ],
            options={
                'verbose_name': 'درخواست دوستی',
                'verbose_name_plural': 'درخواست های دوستی',
                'ordering': ['-datetime'],
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='نام')),
                ('description', models.CharField(blank=True, max_length=200, null=True, verbose_name='توضیحات')),
                ('date', models.DateField(auto_now_add=True, verbose_name='تاریخ ایجاد')),
                ('photo', models.ImageField(blank=True, help_text='JPG, JPEG or PNG is validate', null=True, upload_to=main_app.models.party_image_profile_directory_path, validators=[django.core.validators.FileExtensionValidator(['png', 'jpg', 'jpeg']), main_app.models.validate_image_size], verbose_name='عکس اکیپ')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='creator', to=settings.AUTH_USER_MODEL, verbose_name='سازنده')),
                ('members', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL, verbose_name='اعضا')),
            ],
            options={
                'verbose_name': 'اکیپ',
                'verbose_name_plural': 'اکیپ ها',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='HangoutRequests',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(auto_now_add=True, verbose_name='زمان ارسال')),
                ('hangout', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.hangout', verbose_name='پاتوق')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='فرستنده')),
            ],
            options={
                'verbose_name': 'درخواست اضافه شدن به پاتوق',
                'verbose_name_plural': 'درخواست های اضافه شدن به پاتوق',
                'ordering': ['datetime'],
                'unique_together': {('hangout', 'sender')},
            },
        ),
    ]
