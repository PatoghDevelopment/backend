# Generated by Django 3.2.3 on 2021-07-20 17:22

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import main_app.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=100, primary_key=True, serialize=False, unique=True, verbose_name='نام کاربری')),
                ('fullname', models.CharField(blank=True, max_length=100, null=True, verbose_name='نام کامل')),
                ('email', models.EmailField(max_length=50, unique=True, verbose_name='ایمیل')),
                ('phone', models.CharField(blank=True, max_length=12, null=True, unique=True, verbose_name='شماره تلفن')),
                ('birthdate', models.DateField(blank=True, null=True, verbose_name='تاریخ تولد')),
                ('gender', models.CharField(blank=True, choices=[('0', 'female'), ('1', 'male')], default='1', max_length=6, null=True, verbose_name='جنسیت')),
                ('profile_image_url', models.ImageField(blank=True, help_text='JPG, JPEG or PNG is validate', null=True, upload_to=main_app.models.user_image_profile_directory_path, validators=[django.core.validators.FileExtensionValidator(['png', 'jpg', 'jpeg']), main_app.models.validate_image_size], verbose_name='عکس پروفایل')),
                ('bio', models.CharField(blank=True, max_length=1000, null=True, verbose_name='درباره')),
                ('otp', models.CharField(blank=True, max_length=20, null=True)),
                ('expire_time', models.DateTimeField(blank=True, null=True, verbose_name='زمان ابطال')),
                ('is_confirmed', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'کاربر',
                'verbose_name_plural': 'کاربران',
                'ordering': ['username'],
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, help_text='Unique Id for this City', primary_key=True, serialize=False, verbose_name='شناسه')),
                ('name', models.CharField(help_text='Where do you live?', max_length=40, verbose_name='نام شهر')),
            ],
            options={
                'verbose_name': 'شهر',
                'verbose_name_plural': 'شهر ها',
                'ordering': ['name'],
                'unique_together': {('id', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Gathering',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, help_text='Unique Id for this gathering', primary_key=True, serialize=False, verbose_name='شناسه')),
                ('name', models.CharField(blank=True, max_length=50, null=True, verbose_name='نام')),
                ('status', models.SmallIntegerField(choices=[('0', 'uncommited'), ('1', 'commited')], default=0, verbose_name='حالت دورهمی')),
                ('start_time', models.DateTimeField(help_text='Start time for the patogh', null=True, verbose_name='زمان شروع')),
                ('end_time', models.DateTimeField(help_text='end time for the patogh', null=True, verbose_name='زمان پایان')),
                ('description', models.CharField(help_text='descripe your patogh', max_length=1000, verbose_name='توضیحات')),
                ('gender_filter', models.SmallIntegerField(choices=[('0', 'Female Only'), ('1', 'Male Only'), ('-1', 'No filter')], default=-1, verbose_name='جنسیت')),
                ('members_count', models.IntegerField(default=-1, help_text='-1 means no filter', verbose_name='تعداد اعضا')),
                ('min_age', models.IntegerField(default=-1, help_text='-1 means no filter', verbose_name='کمترین سن')),
                ('max_age', models.IntegerField(default=-1, help_text='-1 means no filter', verbose_name='بالاترین سن')),
                ('creator_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='شناسه پدید آورنده')),
            ],
            options={
                'verbose_name': 'دورهمی',
                'verbose_name_plural': 'دورهمی ها',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='LocationTypes',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, help_text='Unique Id for this Location', primary_key=True, serialize=False, verbose_name='شناسه')),
                ('label', models.CharField(max_length=20, unique=True, verbose_name='برچسب')),
            ],
            options={
                'verbose_name': 'مکان',
                'verbose_name_plural': 'مکان ها',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Patogh',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, help_text='Unique Id for this Patogh', primary_key=True, serialize=False, verbose_name='شناسه')),
                ('name', models.CharField(max_length=100, verbose_name='نام')),
                ('status', models.CharField(choices=[('1', 'public'), ('2', 'private')], max_length=10, verbose_name='حالت دورهمی')),
                ('telephone', models.CharField(max_length=12, verbose_name='شماره تلفن')),
                ('is_telephone_verified', models.CharField(choices=[('0', 'registered'), ('1', 'verified'), ('-1', 'unverified')], default='-1', max_length=10, verbose_name='صحت شماره تلفن')),
                ('address', models.CharField(max_length=1000, verbose_name='آدرس')),
                ('longitude', models.FloatField(blank=True, null=True, verbose_name='عرض جغرافیایی')),
                ('latitude', models.FloatField(blank=True, null=True, verbose_name='طول جغرافیایی')),
                ('description', models.CharField(blank=True, max_length=1000, null=True, verbose_name='توضیحات')),
                ('profile_image_url', models.ImageField(blank=True, help_text='JPG, JPEG or PNG is validate', null=True, upload_to=main_app.models.patogh_image_directory_path, validators=[django.core.validators.FileExtensionValidator(['png', 'jpg', 'jpeg']), main_app.models.validate_image_size], verbose_name='عکس پروفایل')),
                ('wifi', models.BooleanField(blank=True, default=False, null=True, verbose_name='وای فای')),
                ('poz', models.BooleanField(blank=True, default=False, null=True, verbose_name='دستگاه پوز')),
            ],
            options={
                'verbose_name': 'پاتوق',
                'verbose_name_plural': 'پاتوق ها',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='UsersPermision',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, help_text='Unique Id for this User Permision', primary_key=True, serialize=False, verbose_name='شناسه')),
                ('label', models.CharField(max_length=30, null=True, unique=True, verbose_name='برچسب')),
            ],
            options={
                'verbose_name': 'تایید کاربر',
                'verbose_name_plural': 'تایید کاربران',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='PendingVerify',
            fields=[
                ('receptor', models.OneToOneField(max_length=50, on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='main_app.user', verbose_name='دریافت کننده')),
                ('otp', models.IntegerField(verbose_name='OTP کد')),
                ('send_time', models.DateTimeField(null=True, verbose_name='زمان ارسال')),
                ('allowed_try', models.SmallIntegerField(default=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)], verbose_name=' دفعات مجاز برای تلاش')),
            ],
            options={
                'verbose_name': 'تاییدیه',
                'verbose_name_plural': 'تاییدیه ها',
                'ordering': ['send_time'],
            },
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, help_text='Unique Id for this Tag', primary_key=True, serialize=False, verbose_name='شناسه')),
                ('tag', models.CharField(max_length=40, unique=True, verbose_name='برچسب')),
            ],
            options={
                'verbose_name': 'برچست',
                'verbose_name_plural': 'برچسب ها',
                'ordering': ['id'],
                'unique_together': {('id', 'tag')},
            },
        ),
        migrations.CreateModel(
            name='PatoghsComments',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, help_text='Unique Id for this patogh Commments', primary_key=True, serialize=False, verbose_name='شناسه')),
                ('send_time', models.DateTimeField(auto_now_add=True, verbose_name='زمان ارسال')),
                ('comment', models.CharField(max_length=1000, verbose_name='نظر')),
                ('patogh_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='main_app.patogh', verbose_name='شناسه پاتوق')),
                ('reply_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.patoghscomments', verbose_name='بازخورد به')),
                ('sender', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='فرستنده')),
            ],
            options={
                'verbose_name': 'نظر در مورد پاتوق',
                'verbose_name_plural': 'نظرات در مورد پاتوق',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='PatoghHaveImages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_url', models.ImageField(blank=True, help_text='JPG, JPEG or PNG is validate', null=True, upload_to=main_app.models.dorhami_image_profile_directory_path, validators=[django.core.validators.FileExtensionValidator(['png', 'jpg', 'jpeg']), main_app.models.validate_image_size], verbose_name='عکس برای دورهمی')),
                ('status', models.SmallIntegerField(choices=[('0', 'registered'), ('1', 'accepted'), ('2', 'rejected'), ('3', 'deleted')], default=0, verbose_name='وضعیت تایید عکس')),
                ('send_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='زمان ارسال')),
                ('patogh_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.patogh', verbose_name='شناسه پاتوق')),
            ],
            options={
                'verbose_name': 'عکس پاتوق',
                'verbose_name_plural': 'عکس های پاتوق',
                'ordering': ['patogh_id'],
            },
        ),
        migrations.CreateModel(
            name='PatoghCategory',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False, verbose_name='شناسه')),
                ('category', models.CharField(max_length=50, verbose_name='کتگوری')),
            ],
            options={
                'verbose_name': 'کتگوری',
                'verbose_name_plural': 'کتگوری ها',
                'ordering': ['id'],
                'unique_together': {('id', 'category')},
            },
        ),
        migrations.AddField(
            model_name='patogh',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main_app.patoghcategory', verbose_name='کتگوری'),
        ),
        migrations.AddField(
            model_name='patogh',
            name='city',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='main_app.city', verbose_name='شهر'),
        ),
        migrations.AddField(
            model_name='patogh',
            name='creator_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='شناسه پدید آورنده'),
        ),
        migrations.AddField(
            model_name='patogh',
            name='location_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='main_app.locationtypes', verbose_name='مکان'),
        ),
        migrations.AddField(
            model_name='patogh',
            name='tags_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main_app.tags', verbose_name='شناسه برچست'),
        ),
        migrations.CreateModel(
            name='GatheringScheduall',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Sa', models.SmallIntegerField(choices=[('0', 'active with out repeat'), ('1', 'repeat'), ('2', 'unactive')], verbose_name='شنبه')),
                ('Su', models.SmallIntegerField(choices=[('0', 'active with out repeat'), ('1', 'repeat'), ('2', 'unactive')], verbose_name='یک شنبه')),
                ('Mo', models.SmallIntegerField(choices=[('0', 'active with out repeat'), ('1', 'repeat'), ('2', 'unactive')], verbose_name='دو شنبه')),
                ('Tu', models.SmallIntegerField(choices=[('0', 'active with out repeat'), ('1', 'repeat'), ('2', 'unactive')], verbose_name='سه شنبه')),
                ('We', models.SmallIntegerField(choices=[('0', 'active with out repeat'), ('1', 'repeat'), ('2', 'unactive')], verbose_name='چهار شنبه')),
                ('Th', models.SmallIntegerField(choices=[('0', 'active with out repeat'), ('1', 'repeat'), ('2', 'unactive')], verbose_name='پنج شنبه')),
                ('Fr', models.SmallIntegerField(choices=[('0', 'active with out repeat'), ('1', 'repeat'), ('2', 'unactive')], verbose_name='جمعه')),
                ('g_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.gathering', verbose_name='شناسه دورهمی')),
            ],
            options={
                'verbose_name': 'برنامه زمانی',
                'verbose_name_plural': 'برنامه های زمانی',
                'ordering': ['g_id'],
            },
        ),
        migrations.AddField(
            model_name='gathering',
            name='patogh_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='main_app.patogh', verbose_name='شناسه پاتوق'),
        ),
        migrations.AddField(
            model_name='gathering',
            name='tags_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='main_app.tags', verbose_name='شناسه برچسب'),
        ),
        migrations.AddField(
            model_name='user',
            name='city',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='main_app.city', verbose_name='شهر'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.CreateModel(
            name='UsersHavePermisions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permision_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.userspermision', verbose_name='شناسه تاییدیه')),
                ('username', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='نام کاربری')),
            ],
            options={
                'verbose_name': 'وضعیت درخواست',
                'verbose_name_plural': 'وضعیت درخواست ها',
                'ordering': ['username'],
                'unique_together': {('username', 'permision_id')},
            },
        ),
        migrations.CreateModel(
            name='reportedPatogh',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('massage', models.CharField(max_length=1000, verbose_name='پیام')),
                ('send_time', models.DateTimeField(auto_now_add=True, verbose_name='زمان ارسال')),
                ('patogh_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main_app.patogh', verbose_name='شناسه پاتوق')),
                ('username', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='نام کاربری')),
            ],
            options={
                'verbose_name': 'پاتوق گزارش شده',
                'verbose_name_plural': 'پاتوق های گزارش شده',
                'ordering': ['patogh_id'],
                'unique_together': {('patogh_id', 'username')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='patogh',
            unique_together={('id', 'creator_id')},
        ),
        migrations.CreateModel(
            name='JoinGatheringRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.SmallIntegerField(choices=[('0', 'requested'), ('1', 'accepted'), ('2', 'rejected')], verbose_name='وضعیت درخواست')),
                ('g_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.gathering', verbose_name='شناسه دورهمی')),
                ('username', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='نام کاربری')),
            ],
            options={
                'verbose_name': 'درخواست پیوستن',
                'verbose_name_plural': 'درخواست های پیوستن',
                'ordering': ['g_id'],
                'unique_together': {('g_id', 'username')},
            },
        ),
        migrations.CreateModel(
            name='GatheringHaveMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.SmallIntegerField(choices=[('0', 'normal member'), ('1', 'deleted'), ('2', 'quit')], default=0, verbose_name='حالت دورهمی')),
                ('g_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.patogh', verbose_name='شناسه پاتوق')),
                ('username', models.ForeignKey(max_length=30, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='نام کاربری')),
            ],
            options={
                'verbose_name': 'عضو دورهمی',
                'verbose_name_plural': 'اعضای دورهمی',
                'ordering': ['username'],
                'unique_together': {('g_id', 'username')},
            },
        ),
    ]
